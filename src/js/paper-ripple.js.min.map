/*
 * This file/code is part of Paper UI project.
 *
 * Paper UI - is a modern front-end framework based on Material Design by Google
 * https://github.com/virtyaluk/paper-ui
 *
 * Copyright (c) 2015 Bohdan Shtepan
 * http://modern-dev.com/
 *
 * Licensed under the MIT license.
 */
 {"version":3,"sources":["PaperRipple.js"],"names":["global","factory","define","amd","exports","module","mod","PaperRipple","this","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","ElementRect","element","_element","width","boundingRect","height","size","Math","max","value","_ref","_ref$x","x","undefined","_ref$y","y","euclideanDistance","_ref2","clientX","clientY","l","left","t","top","w","h","_x","_y","get","getBoundingClientRect","point1","point2","sqrt","pow","_window","window","_doc","document","_now","performance","now","bind","Date","PaperWave","_ref3","$","_ref3$recenters","recenters","_ref3$center","center","_ref3$initialOpacity","initialOpacity","_ref3$opacityDecayVel","opacityDecayVelocity","color","getComputedStyle","containerRect","$wave","createElement","classList","add","style","backgroundColor","appendChild","resetDefaults","maxRadius","touchDownStarted","touchUpStarted","startPosition","endPosition","cssString","scaleFactor","radius","containerCenter","currentPos","currentPosition","deltaPos","opacity","webkitTransform","mozTransform","msTransform","oTransform","transform","event","arguments","distanceToFarthestCorner","isTouchDown","parentNode","removeChild","elapsed","touchUpElapsed","touchDownElapsed","touchDownElapsedSeconds","touchUpElapsedSeconds","min","MAX_RADIUS","currentTime","mouseInteractionSeconds","actualRadius","abs","isWaveFullyOpaque","isMaxRadiusReached","translateFraction","translationFraction","cfg","_ref4","_ref4$initialOpacity","_ref4$opacityDecayVel","_ref4$recenters","_ref4$center","_ref4$round","round","_ref4$target","_waves","_initTarget","nodeType","$background","querySelector","$waves","wave","push","ev","addWave","downAction","animate","forEach","upAction","waveIndex","indexOf","splice","remove","draw","outerOpacity","removeWave","shouldKeepAnimating","requestAnimationFrame","hasAttribute","set","newValue","contains","toggle","some","isAnimationComplete"],"mappings":"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","file":"PaperRipple.js","sourcesContent":["/*\n * This file/code is part of Paper UI project.\n *\n * Paper UI - is a modern front-end framework based on Material Design by Google\n * https://github.com/virtyaluk/paper-ui\n *\n * Copyright (c) 2015 Bohdan Shtepan\n * http://modern-dev.com/\n *\n * Licensed under the MIT license.\n */\n (function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define('PaperRipple', ['module'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod);\n    global.PaperRipple = mod.exports;\n  }\n})(this, function (module) {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var ElementRect = function () {\n    /**\n     * Initializes a new instance of the `ElementRect` class with the specified `element`.\n     *\n     * @constructs ElementRect\n     * @param {HTMLElement} element - The DOM element to get metrics from\n     * @returns {ElementRect} The new instance of a class.\n     */\n    function ElementRect(element) {\n      _classCallCheck(this, ElementRect);\n\n      this._element = element;\n\n      /**\n       * Returns the width of the current element.\n       *\n       * @type {Number}\n       */\n      this.width = this.boundingRect.width;\n\n      /**\n       * Returns the height of the current element.\n       *\n       * @type {Number}\n       */\n      this.height = this.boundingRect.height;\n\n      /**\n       * Returns the size (the biggest side) of the current element.\n       *\n       * @type {number}\n       */\n      this.size = Math.max(this.width, this.height);\n\n      return this;\n    }\n\n    /**\n     * Returns the center coordinates of the current element.\n     *\n     * @returns {{ x: Number, y: Number }} Object containing coordinates of the element's center.\n     */\n\n\n    _createClass(ElementRect, [{\n      key: 'distanceToFarthestCorner',\n      value: function distanceToFarthestCorner(_ref) {\n        var _ref$x = _ref.x,\n            x = _ref$x === undefined ? 0 : _ref$x,\n            _ref$y = _ref.y,\n            y = _ref$y === undefined ? 0 : _ref$y;\n\n        return Math.max(ElementRect.euclideanDistance({ x: x, y: y }, { x: 0, y: 0 }), ElementRect.euclideanDistance({ x: x, y: y }, { x: this.width, y: 0 }), ElementRect.euclideanDistance({ x: x, y: y }, { x: 0, y: this.height }), ElementRect.euclideanDistance({ x: x, y: y }, { x: this.width, y: this.height }));\n      }\n    }, {\n      key: 'contains',\n      value: function contains(_ref2) {\n        var x = _ref2.x,\n            y = _ref2.y,\n            clientX = _ref2.clientX,\n            clientY = _ref2.clientY;\n\n        var l = this.boundingRect.left,\n            t = this.boundingRect.top,\n            w = this.boundingRect.width,\n            h = this.boundingRect.height,\n            _x = x || clientX || 0,\n            _y = y || clientY || 0;\n\n        return _x >= l && _x <= l + w && _y >= t && _y <= t + h;\n      }\n    }, {\n      key: 'center',\n      get: function get() {\n        return {\n          x: this.width / 2,\n          y: this.height / 2\n        };\n      }\n    }, {\n      key: 'boundingRect',\n      get: function get() {\n        return this._element.getBoundingClientRect();\n      }\n    }], [{\n      key: 'euclideanDistance',\n      value: function euclideanDistance(point1, point2) {\n        return Math.sqrt(Math.pow(point1.x - point2.x, 2) + Math.pow(point1.y - point2.y, 2));\n      }\n    }]);\n\n    return ElementRect;\n  }();\n\n  /**\n   * This file\\code is part of Paper UI project.\n   *\n   * Paper UI - is a modern front-end framework based on Material Design by Google\n   * https://github.com/virtyaluk/paper-ui\n   *\n   * Copyright (c) 2015 Bohdan Shtepan\n   * http://modern-dev.com/\n   *\n   * Licensed under the MIT license.\n   */\n\n  /*eslint no-unused-vars: 0*/\n\n  var _window = window || undefined,\n      _doc = _window.document,\n      _now = function () {\n    return _window.performance && _window.performance.now ? _window.performance.now.bind(_window.performance) : Date.now;\n  }();\n\n  /**\n   * Provides all the logic to produce a one-time rippling effect.\n   *\n   * @class PaperWave\n   */\n\n  var PaperWave = function () {\n    /**\n     * Initializes a new instance of the `PaperWave` class with the specified `PaperRipple` instance.\n     *\n     * @constructs PaperWave\n     * @returns {PaperWave} The new instance of a class.\n     *\n     * @example\n     * var paperWave = new PaperWave(paperRipple);\n     *\n     * paperWave.downAction(null);\n     * paperWave.upAction();\n     *\n     * if (paperWave.isAnimationCompleted) {\n     *     paperWave.remove();\n     * }\n     */\n    function PaperWave(_ref3) {\n      var $ = _ref3.$,\n          _ref3$recenters = _ref3.recenters,\n          recenters = _ref3$recenters === undefined ? false : _ref3$recenters,\n          _ref3$center = _ref3.center,\n          center = _ref3$center === undefined ? false : _ref3$center,\n          _ref3$initialOpacity = _ref3.initialOpacity,\n          initialOpacity = _ref3$initialOpacity === undefined ? 0.25 : _ref3$initialOpacity,\n          _ref3$opacityDecayVel = _ref3.opacityDecayVelocity,\n          opacityDecayVelocity = _ref3$opacityDecayVel === undefined ? 0.8 : _ref3$opacityDecayVel;\n\n      _classCallCheck(this, PaperWave);\n\n      /**\n       * Gets or sets the color of the wave.\n       *\n       * @type {String}\n       */\n      this.color = _window.getComputedStyle($).color;\n\n      /**\n       * Gets or sets the container metrics of the wave.\n       *\n       * @type {ElementRect}\n       */\n      this.containerRect = new ElementRect($);\n\n      /**\n       * Determines whether the wave should be re-centered towards the center of its container.\n       *\n       * @type {Boolean}\n       */\n      this.recenters = recenters;\n\n      /**\n       * Determines whether the wave should start a movement from the center of its container.\n       *\n       * @type {Boolean}\n       */\n      this.center = center;\n\n      /**\n       * Gets initial opacity of the wave.\n       *\n       * @type {Number}\n       */\n      this.initialOpacity = initialOpacity;\n\n      /**\n       * Gets opacity decay velocity of the wave.\n       *\n       * @type {Number}\n       */\n      this.opacityDecayVelocity = opacityDecayVelocity;\n\n      /**\n       * Represents the object wrapped around the `wave` DOM element that belongs to the current instance.\n       *\n       * @type {Object}\n       */\n      this.$wave = _doc.createElement('div');\n\n      this.$wave.classList.add('paper-ripple__wave');\n      this.$wave.style.backgroundColor = this.color;\n\n      /**\n       * Represents the object wrapped around the main DOM element that belongs to the current instance.\n       *\n       * @type {Object}\n       */\n      this.$ = _doc.createElement('div');\n\n      this.$.classList.add('paper-ripple__wave-container');\n      this.$.appendChild(this.$wave);\n\n      this.resetDefaults();\n\n      return this;\n    }\n\n    /**\n     * Represents the max possible value of the wave's radius.\n     *\n     * @const {Number}\n     * @default\n     */\n\n\n    _createClass(PaperWave, [{\n      key: 'resetDefaults',\n      value: function resetDefaults() {\n        /**\n         * Gets or sets max radius of the wave.\n         *\n         * @type {Number}\n         */\n        this.maxRadius = 0;\n\n        /**\n         * Gets or sets the time of starting interaction with the wave.\n         *\n         * @type {Number}\n         */\n        this.touchDownStarted = 0;\n\n        /**\n         * Gets or sets the time of ending interaction with the wave.\n         *\n         * @type {Number}\n         */\n        this.touchUpStarted = 0;\n\n        /**\n         * Gets or sets the start position of the wave.\n         *\n         * @type {{x: Number, y: Number}}\n         */\n        this.startPosition = { x: 0, y: 0 };\n\n        /**\n         * Gets or sets the end position of the wave.\n         *\n         * @type {{x: Number, y: Number}}\n         */\n        this.endPosition = { x: 0, y: 0 };\n\n        return this;\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        var cssString = void 0,\n            scaleFactor = this.radius / (this.containerRect.size / 2),\n            containerCenter = this.containerRect.center,\n            currentPos = this.currentPosition,\n            deltaPos = {\n          x: currentPos.x - containerCenter.x,\n          y: currentPos.y - containerCenter.y\n        };\n\n        this.$wave.style.opacity = this.opacity;\n\n        cssString = 'translate(' + deltaPos.x + 'px, ' + deltaPos.y + 'px)';\n        this.$.style.webkitTransform = cssString;\n        this.$.style.mozTransform = cssString;\n        this.$.style.msTransform = cssString;\n        this.$.style.oTransform = cssString;\n        this.$.style.transform = 'translate3d(' + deltaPos.x + 'px, ' + deltaPos.y + 'px, 0)';\n\n        cssString = 'scale(' + scaleFactor + ',' + scaleFactor + ')';\n        this.$wave.style.webkitTransform = cssString;\n        this.$wave.style.mozTransform = cssString;\n        this.$wave.style.msTransform = cssString;\n        this.$wave.style.oTransform = cssString;\n        this.$wave.style.transform = 'scale3d(' + scaleFactor + ',' + scaleFactor + ', 1)';\n\n        return this;\n      }\n    }, {\n      key: 'downAction',\n      value: function downAction() {\n        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n        var containerCenter = this.containerRect.center;\n\n        this.resetDefaults();\n\n        this.touchDownStarted = _now();\n        this.startPosition = this.center || !event ? containerCenter : {\n          x: (event.clientX || event.x) - this.containerRect.boundingRect.left,\n          y: (event.clientY || event.y) - this.containerRect.boundingRect.top\n        };\n        this.endPosition = this.recenters ? containerCenter : this.endPosition;\n        this.maxRadius = this.containerRect.distanceToFarthestCorner(this.startPosition);\n\n        this.$.style.top = (this.containerRect.height - this.containerRect.size) / 2 + 'px';\n        this.$.style.left = (this.containerRect.width - this.containerRect.size) / 2 + 'px';\n        this.$.style.width = this.containerRect.size + 'px';\n        this.$.style.height = this.containerRect.size + 'px';\n\n        return this;\n      }\n    }, {\n      key: 'upAction',\n      value: function upAction() {\n        if (!this.isTouchDown) {\n          return this;\n        }\n\n        /**\n         * @private\n         */\n        this.touchUpStarted = _now();\n\n        return this;\n      }\n    }, {\n      key: 'remove',\n      value: function remove() {\n        this.$.parentNode.removeChild(this.$);\n\n        return this;\n      }\n    }, {\n      key: 'touchDownElapsed',\n      get: function get() {\n        var elapsed;\n\n        if (!this.touchDownStarted) {\n          return 0;\n        }\n\n        elapsed = _now() - this.touchDownStarted;\n\n        if (this.touchUpStarted) {\n          elapsed -= this.touchUpElapsed;\n        }\n\n        return elapsed;\n      }\n    }, {\n      key: 'touchUpElapsed',\n      get: function get() {\n        return this.touchUpStarted ? _now() - this.touchUpStarted : 0;\n      }\n    }, {\n      key: 'touchDownElapsedSeconds',\n      get: function get() {\n        return this.touchDownElapsed / 1000;\n      }\n    }, {\n      key: 'touchUpElapsedSeconds',\n      get: function get() {\n        return this.touchUpElapsed / 1000;\n      }\n    }, {\n      key: 'mouseInteractionSeconds',\n      get: function get() {\n        return this.touchDownElapsedSeconds + this.touchUpElapsedSeconds;\n      }\n    }, {\n      key: 'radius',\n      get: function get() {\n        var radius = Math.min(Math.sqrt(Math.pow(this.containerRect.width, 2) + Math.pow(this.containerRect.height, 2)), PaperWave.MAX_RADIUS) * 1.1 + 5,\n            elapsed = 1.1 - 0.2 * (radius / PaperWave.MAX_RADIUS),\n            currentTime = this.mouseInteractionSeconds / elapsed,\n            actualRadius = radius * (1 - Math.pow(80, -currentTime));\n\n        return Math.abs(actualRadius);\n      }\n    }, {\n      key: 'opacity',\n      get: function get() {\n        if (!this.touchUpStarted) {\n          return this.initialOpacity;\n        }\n\n        return Math.max(0, this.initialOpacity - this.touchUpElapsedSeconds * this.opacityDecayVelocity);\n      }\n    }, {\n      key: 'outerOpacity',\n      get: function get() {\n        return Math.max(0, Math.min(this.touchUpElapsedSeconds * 0.3, this.opacity));\n      }\n    }, {\n      key: 'isWaveFullyOpaque',\n      get: function get() {\n        return this.opacity < 0.01 && this.radius >= Math.min(this.maxRadius, PaperWave.MAX_RADIUS);\n      }\n    }, {\n      key: 'isMaxRadiusReached',\n      get: function get() {\n        return this.opacity >= this.initialOpacity && this.radius >= Math.min(this.maxRadius, PaperWave.MAX_RADIUS);\n      }\n    }, {\n      key: 'isAnimationComplete',\n      get: function get() {\n        return this.touchUpStarted ? this.isWaveFullyOpaque : this.isMaxRadiusReached;\n      }\n    }, {\n      key: 'translationFraction',\n      get: function get() {\n        return Math.min(1, this.radius / this.containerRect.size * 2 / Math.sqrt(2));\n      }\n    }, {\n      key: 'currentPosition',\n      get: function get() {\n        var translateFraction = this.translationFraction,\n            x = this.startPosition.x,\n            y = this.startPosition.y;\n\n        if (this.endPosition.x) {\n          x = this.startPosition.x + translateFraction * (this.endPosition.x - this.startPosition.x);\n        }\n\n        if (this.endPosition.y) {\n          y = this.startPosition.y + translateFraction * (this.endPosition.y - this.startPosition.y);\n        }\n\n        return { x: x, y: y };\n      }\n    }, {\n      key: 'isTouchDown',\n      get: function get() {\n        return this.touchDownStarted && !this.touchUpStarted;\n      }\n    }]);\n\n    return PaperWave;\n  }();\n\n  PaperWave.MAX_RADIUS = 300;\n\n  var PaperRipple = function () {\n    /**\n     * Initializes a new instance of the `PaperRipple` class with the specified `config` object.\n     *\n     * @constructs PaperRipple\n     * @param {(Object|Element)} [cfg={}] - A configuration object.\n     * @param {Number} [cfg.initialOpacity=0.25] - The initial opacity of the each wave.\n     * @param {Number} [cfg.opacityDecayVelocity=0.8] - How fast (opacity per second) the wave fades out.\n     * @param {Boolean} [cfg.recenters=false] - If `true`, waves will exhibit a gravitational pull towards the center of their container as they fade away.\n     * @param {Boolean} [cfg.center=false] - If `true`, waves will center inside its container.\n     * @param {Boolean} [cfg.round=false] - If `true`, ripple effect will apply within a circle.\n     * @param {Element} [cfg.target=null] - Target DOM element as the container for the waves.\n     * If target element is not presented, then new one will be created automatically.\n     * @returns {PaperRipple} The new instance of a class.\n     *\n     * @example\n     * // Creating the new instance\n     * var ripple = new PaperRipple({ recenters: true });\n     *\n     * // Appending it to another DOM element\n     * ripple.$.appendTo(someEl);\n     *\n     * // Listening to that element's events and performing ripple effect\n     * someEl.on({\n     *     mousedown: function(ev) {\n     *         ripple.downAction(ev);\n     *     },\n     *     mouseup: function() {\n     *         ripple.upAction();\n     *     }\n     * );\n     */\n    function PaperRipple(cfg) {\n      _classCallCheck(this, PaperRipple);\n\n      var _ref4 = cfg || {},\n          _ref4$initialOpacity = _ref4.initialOpacity,\n          initialOpacity = _ref4$initialOpacity === undefined ? 0.25 : _ref4$initialOpacity,\n          _ref4$opacityDecayVel = _ref4.opacityDecayVelocity,\n          opacityDecayVelocity = _ref4$opacityDecayVel === undefined ? 0.8 : _ref4$opacityDecayVel,\n          _ref4$recenters = _ref4.recenters,\n          recenters = _ref4$recenters === undefined ? false : _ref4$recenters,\n          _ref4$center = _ref4.center,\n          center = _ref4$center === undefined ? false : _ref4$center,\n          _ref4$round = _ref4.round,\n          round = _ref4$round === undefined ? false : _ref4$round,\n          _ref4$target = _ref4.target,\n          target = _ref4$target === undefined ? null : _ref4$target;\n\n      /**\n       * Gets or sets the initial opacity of the each wave.\n       *\n       * @type {Number}\n       */\n      this.initialOpacity = initialOpacity;\n\n      /**\n       * Gets or sets how fast (opacity per second) the wave fades out.\n       *\n       * @type {Number}\n       */\n      this.opacityDecayVelocity = opacityDecayVelocity;\n\n      /**\n       * @type {PaperWave[]}\n       * @private\n       */\n      this._waves = [];\n\n      this._initTarget(cfg && cfg.nodeType ? cfg : target && target.nodeType ? target : null);\n\n      /**\n       * @type {Boolean}\n       * @private\n       */\n      this.recenters = recenters || this.recenters;\n\n      /**\n       * @type {Boolean}\n       * @private\n       */\n      this.center = center || this.center;\n\n      /**\n       * @type {Boolean}\n       * @private\n       */\n      this.round = round || this.round;\n\n      return this;\n    }\n\n    /**\n     * Determines whether all the waves should be re-centered towards the center of the container.\n     *\n     * @returns {Boolean} If `true`, waves will exhibit a gravitational pull towards the center of the container as they fade away.\n     */\n\n\n    _createClass(PaperRipple, [{\n      key: '_initTarget',\n      value: function _initTarget() {\n        var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n        // eslint-disable-next-line no-use-before-define\n        var _doc = _doc || window.document;\n\n        if (!this.$) {\n          /**\n           * The object wrapper containing all the DOM elements belongs to the current instance.\n           *\n           * @type {Object}\n           */\n          this.$ = target || _doc.createElement('div');\n          this.$.classList.add('paper-ripple');\n        }\n\n        if (!this.$background) {\n          /**\n           * The object wrapper containing the `$background` DOM element belongs to the current instance.\n           *\n           * @type {Object}\n           */\n          this.$background = target && target.querySelector('.paper-ripple__background') || _doc.createElement('div');\n\n          this.$background.classList.add('paper-ripple__background');\n          this.$.appendChild(this.$background);\n        }\n\n        if (!this.$waves) {\n          /**\n           * The object wrapper containing the waves container belongs to the current instance.\n           *\n           * @type {Object}\n           */\n          this.$waves = target && target.querySelector('.paper-ripple__waves') || _doc.createElement('div');\n\n          this.$waves.classList.add('paper-ripple__waves');\n          this.$.appendChild(this.$waves);\n        }\n\n        return this;\n      }\n    }, {\n      key: 'addWave',\n      value: function addWave() {\n        var wave = new PaperWave(this);\n\n        this.$waves.appendChild(wave.$);\n        this.$background.style.backgroundColor = wave.color;\n        this._waves.push(wave);\n\n        return wave;\n      }\n    }, {\n      key: 'downAction',\n      value: function downAction(ev) {\n        var wave = this.addWave();\n\n        wave.downAction(ev);\n        this.animate();\n\n        return this;\n      }\n    }, {\n      key: 'upAction',\n      value: function upAction() {\n        this._waves.forEach(function (wave) {\n          wave.upAction();\n        });\n\n        this.animate();\n\n        return this;\n      }\n    }, {\n      key: 'removeWave',\n      value: function removeWave(wave) {\n        var waveIndex = this._waves.indexOf(wave);\n\n        if (waveIndex < 0) {\n          return this;\n        }\n\n        this._waves.splice(waveIndex, 1);\n\n        wave.remove();\n\n        return this;\n      }\n    }, {\n      key: 'animate',\n      value: function animate() {\n        var i = void 0,\n            l = void 0,\n            wave = void 0;\n\n        for (i = 0, l = this._waves.length; i < l; i++) {\n          wave = this._waves[i];\n\n          if (wave) {\n            wave.draw();\n\n            this.$background.style.opacity = wave.outerOpacity;\n\n            if (wave.isWaveFullyOpaque && !wave.isMaxRadiusReached) {\n              this.removeWave(wave);\n            }\n          }\n        }\n\n        if (!this.shouldKeepAnimating && this._waves.length === 0) {\n          this.$background.style.backgroundColor = null;\n        } else {\n          window.requestAnimationFrame(this.animate.bind(this));\n        }\n\n        return this;\n      }\n    }, {\n      key: 'recenters',\n      get: function get() {\n        return this.$.hasAttribute('recenters');\n      },\n      set: function set(newValue) {\n        this.$[newValue ? 'setAttribute' : 'removeAttribute']('recenters', '');\n      }\n    }, {\n      key: 'center',\n      get: function get() {\n        return this.$.hasAttribute('center');\n      },\n      set: function set(newValue) {\n        this.$[newValue ? 'setAttribute' : 'removeAttribute']('center', '');\n      }\n    }, {\n      key: 'round',\n      get: function get() {\n        return this.$.classList.contains('paper-ripple--round');\n      },\n      set: function set(newValue) {\n        this.$.classList.toggle('paper-ripple--round', newValue);\n      }\n    }, {\n      key: 'shouldKeepAnimating',\n      get: function get() {\n        return this._waves.some(function (wave) {\n          return !wave.isAnimationComplete;\n        });\n      }\n    }]);\n\n    return PaperRipple;\n  }();\n\n  module.exports = PaperRipple;\n});\n//# sourceMappingURL=PaperRipple.js.map\n"]}